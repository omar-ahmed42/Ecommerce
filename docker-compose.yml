version: '2'
services:
  redis:
    container_name: redis
    image: redis
    ports:
      - "${HOST_REDIS_PORT}:6379"
    networks:
      - ecommerce-network
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
  mysql:
    container_name: mysql
    image: mysql
    env_file:
      - mysql.env
    ports:
      - "${HOST_MYSQL_PORT}:3306"
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${HOST_MYSQL_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 5
  maildev:
    container_name: maildev
    image: maildev/maildev
    ports: 
      - "${HOST_MAILDEV_SMTP_PORT}:1025"
      - "${HOST_MAILDEV_WEB_PORT}:1080"
    networks:
      - ecommerce-network
  ecommerce:
    container_name: ecommerce
    build:
      dockerfile: Dockerfile.spring-boot
    image: ecommerce:latest
    env_file:
      - ecommerce.env
    ports:
      - "${HOST_SPRING_PORT}:8080"
    networks:
      - ecommerce-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      maildev:
        condition: service_healthy
networks:
  ecommerce-network:
    driver: bridge